<?php

/**
 * @file
 * Contains pbc_automation.install.
 */

/**
 * Update obsolete entity action plugins to new definitions (workaround).
 *
 * See https://www.drupal.org/project/drupal/issues/3045570
 *
 * Implements hook_update_N().
 */
function pbc_automation_update_9001() {
  $old_new_action_id_map = [
    'node_publish_action' => 'entity:publish_action:node',
    'node_unpublish_action' => 'entity:unpublish_action:node',
    'node_save_action' => 'entity:save_action:node',
    'node_delete_action' => 'entity:delete_action:node',
    'comment_publish_action' => 'entity:publish_action:comment',
    'comment_unpublish_action' => 'entity:unpublish_action:comment',
    'comment_save_action' => 'entity:save_action:comment',
    'comment_delete_action' => 'entity:delete_action:comment',
  ];

  /** @var \Drupal\system\Entity\Action[] $actions */
  $actions = \Drupal::entityTypeManager()->getStorage('action')->loadMultiple();
  foreach ($actions as $action) {
    if (isset($old_new_action_id_map[$action->id()])) {
      $action->setPlugin($old_new_action_id_map[$action->id()]);
      $action->save();
    }
  }
}

/**
 * Update Group Attendance Field Values.
 */
function pbc_automation_update_8102() {
  $storage = Drupal::getContainer()->get('entity_type.manager')->getStorage('node');

  // Status is No.
  $records = $storage->loadByProperties([
    'type' => 'group_attendance_record',
    'field_meeting_status' => 0,
  ]);

  foreach ($records as $record) {
    $record->field_group_meeting_status->setValue('no');
    $record->save();
  }

  // Status is Yes.
  $records = $storage->loadByProperties([
    'type' => 'group_attendance_record',
    'field_meeting_status' => 1,
  ]);

  foreach ($records as $record) {
    $status = 'not_submitted';
    // Check if anyone is in attendance.
    $attendance = $storage->getQuery()->count()
      ->condition('type', 'individual_attendance_record')
      ->condition('field_in_attendance', 1)
      ->condition('field_group_attendance_record', $record->id())
      ->accessCheck(FALSE)
      ->execute();
    // Mark as yes.
    if ($attendance > 0) {
      $status = 'yes';
    }
    $record->field_group_meeting_status->setValue($status);
    $record->save();
  }
}

/**
 * Fix field_below_poverty_line for individual attendance records.
 */
function pbc_automation_update_8105() {
  $storage = Drupal::getContainer()->get('entity_type.manager')->getStorage('node');

  $records = $storage->loadByProperties([
    'type' => 'individual_attendance_record',
  ]);

  foreach ($records as $record) {
    $poverty = $record->field_group_connection->entity->field_individual->entity->field_below_poverty_line->value;
    $record->field_below_poverty_line->setValue($poverty);
    $record->save();
  }
}
