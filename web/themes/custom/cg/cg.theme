<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Link;
use Drupal\Core\Url;

function cg_preprocess_views_view_field(&$variables) {
  $field_name = $variables['field']->realField;
  if ($variables['view']->id() === 'report_simple') {
    if ($field_name === 'nothing') {
      $attendance_node = $variables['row']->_entity;
      $utility = Drupal::service('pbc_reports.utility');
      $in_attendance = $utility->getAttendanceByGroup($attendance_node->id(), 1, 1);
      $active_in_group = $utility->getGroupParticipants($attendance_node->field_group->target_id, 1);

      $percent = $utility->createPercent($in_attendance, $active_in_group);

      $variables['output'] = $percent;
    }
  }
  if ($variables['view']->id() === 'group_roster') {
    $storage = Drupal::getContainer()->get('entity_type.manager')->getStorage('user');
    $user = $storage->load(Drupal::currentUser()->id());
    $roles = $user->getRoles();
    if ($field_name === 'field_planning_center_id_value' && !in_array('group_admin', $roles)) {
      unset($variables['output']);
    }
  }
  elseif ($variables['view']->id() != 'group_guests') {
    return FALSE;
  }
  // TODO: limit to this view.
  if ($field_name != 'nothing') {
    return FALSE;
  }

  $storage = Drupal::getContainer()->get('entity_type.manager')->getStorage('node');
  $group_connection_node = $variables['row']->_entity;
  $group_attend_nid = $variables['output']->__toString();

  $attendance = $storage->getQuery()->count()
    ->condition('type', 'individual_attendance_record')
    ->condition('status', 1)
    ->condition('field_group_attendance_record', $group_attend_nid)
    ->condition('field_group_connection', $group_connection_node->id())
    ->execute();

  $output = [
    '#prefix' => '<span class="label label-success">',
    '#markup' => '&#10003; Added',
    '#suffix' => '</span>',
  ];
  if ($attendance == 0) {
    $url_guest = Url::fromRoute(
      'pbc_groups.record_attendance_controller_callback',
      [
        'group_connection' => $group_connection_node->id(),
        'group_attendance_record' => $group_attend_nid,
        'in_attendance' => 1,
        'status' => 3,
      ],
      [
        'attributes' => [
          'class' => ['btn', 'btn-default'],
          'role' => 'group',
          'type' => 'button',
        ],
      ]
    );

    $url_active = Url::fromRoute(
      'pbc_groups.record_attendance_controller_callback',
      [
        'group_connection' => $group_connection_node->id(),
        'group_attendance_record' => $group_attend_nid,
        'in_attendance' => 1,
        'status' => 1,
      ],
      [
        'attributes' => [
          'class' => ['btn', 'btn-default'],
          'role' => 'group',
          'type' => 'button',
        ],
      ]
    );

    $link_text = t('Add as Guest');
    $link_guest = Link::fromTextAndUrl($link_text, $url_guest)->toString();

    $link_text = t('Add as Active Member');
    $link_active = Link::fromTextAndUrl($link_text, $url_active)->toString();

    $output = [
      '#prefix' => '<div class="btn-group btn-group-vertical btn-group-sm" role="group">',
      '#markup' => $link_guest . $link_active,
      '#suffix' => '</div>',
    ];
  }
  $variables['output'] = $output;

  // <a type="button" class="btn btn-default" role="button" href="/group/add/group-connection/{{ arguments.null }}/{{ nid }}/3 ">Add as Guest</a>
  // <a type="button" class="btn btn-default" role="button" href="/group/add/group-connection/{{ arguments.null }}/{{ nid }}/1>Add as Active Member</a>
}

function cg_preprocess_block(&$variables) {
  $route = Drupal::routeMatch();
  if ($route->getRouteName() === 'entity.node.canonical' && $route->getParameter('node')->getType() === 'group_attendance_record') {
    if ($variables['plugin_id'] === 'find_individual_block') {
      $variables['attributes']['class'][] = 'collapse';
    }
  }
}
